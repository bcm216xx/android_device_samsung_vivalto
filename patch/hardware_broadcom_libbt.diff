diff --git a/src/userial_vendor.c b/src/userial_vendor.c
index 0f3f527..cec737e 100644
--- a/src/userial_vendor.c
+++ b/src/userial_vendor.c
@@ -68,6 +68,7 @@ typedef struct
 ******************************************************************************/
 
 static vnd_userial_cb_t vnd_userial;
+static int vnd_userial_force_2stopbits = UART_FORCE_TWO_STOPBITS;
 
 /*****************************************************************************
 **   Helper Functions
@@ -194,6 +195,10 @@ int userial_vendor_open(tUSERIAL_CFG *p_cfg)
     uint8_t data_bits;
     uint16_t parity;
     uint8_t stop_bits;
+	
+#if (BT_WAKE_VIA_USERIAL_IOCTL==TRUE)
+    int ldisc;
+#endif
 
     vnd_userial.fd = -1;
 
@@ -228,10 +233,10 @@ int userial_vendor_open(tUSERIAL_CFG *p_cfg)
         return -1;
     }
 
-    if(p_cfg->fmt & USERIAL_STOPBITS_1)
-        stop_bits = 0;
-    else if(p_cfg->fmt & USERIAL_STOPBITS_2)
+    if(vnd_userial_force_2stopbits || (p_cfg->fmt & USERIAL_STOPBITS_2))
         stop_bits = CSTOPB;
+    else if(p_cfg->fmt & USERIAL_STOPBITS_1)
+        stop_bits = 0;
     else
     {
         ALOGE("userial vendor open: unsupported stop bits");
@@ -264,6 +269,13 @@ int userial_vendor_open(tUSERIAL_CFG *p_cfg)
     tcsetattr(vnd_userial.fd, TCSANOW, &vnd_userial.termios);
 
 #if (BT_WAKE_VIA_USERIAL_IOCTL==TRUE)
+	// TODO: check for breakage on tuna (Galaxy Nexus). It defines this,
+    //       but does not contain the kernel code to support it.
+
+    // Switch to N_BRCM_HCI line disclipline for ioctl to work
+    ldisc = 25; // N_BRCM_HCI
+    ioctl(vnd_userial.fd, TIOCSETD, &ldisc);
+
     userial_ioctl_init_bt_wake(vnd_userial.fd);
 #endif
 
@@ -373,3 +385,21 @@ int userial_set_port(char *p_conf_name, char *p_conf_value, int param)
     return 0;
 }
 
+/*******************************************************************************
+**
+** Function        userial_set_force_use_2_stop_bits
+**
+** Description     Configure UART port name
+**
+** Returns         0 : Success
+**                 Otherwise : Fail
+**
+*******************************************************************************/
+int userial_set_force_use_2_stop_bits(char *p_conf_name, char *p_conf_value, int param)
+{
+    if (strcmp(p_conf_value, "true") == 0)
+        vnd_userial_force_2stopbits = TRUE;
+    else
+        vnd_userial_force_2stopbits = FALSE;
+    return 0;
+}
